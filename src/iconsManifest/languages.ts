import { ILanguage } from '../models';

export const languages = {
  actionscript: { ids: 'actionscript', knownExtensions: ['as'] },
  ada: { ids: 'ada', knownExtensions: ['ada'] },
  advpl: { ids: 'advpl', knownExtensions: ['prw'] },
  affectscript: { ids: 'affectscript', knownExtensions: ['affect'] },
  agda: {
    ids: ['agda', 'lagda-md', 'lagda-rst', 'lagda-tex'],
    knownExtensions: ['agda'],
  },
  al: { ids: 'al', knownExtensions: ['al'] },
  alloy: { ids: 'alloy', knownExtensions: ['alloy'] },
  ansible: { ids: 'ansible', knownExtensions: ['ansible'] },
  antlr: { ids: 'antlr', knownExtensions: ['g4'] },
  anyscript: { ids: 'anyscript', knownExtensions: ['any'] },
  apache: { ids: 'apacheconf', knownExtensions: ['htaccess'] },
  apex: { ids: 'apex', knownExtensions: ['cls'] },
  apib: { ids: 'apiblueprint', knownExtensions: ['apib'] },
  apl: { ids: 'apl', knownExtensions: ['apl'] },
  applescript: { ids: 'applescript', knownExtensions: ['applescript'] },
  asciidoc: { ids: 'asciidoc', knownExtensions: ['adoc'] },
  asp: { ids: ['asp', 'asp (html)'], knownExtensions: ['asp'] },
  assembly: {
    ids: [
      'arm',
      'asm',
      'asm-intel-x86-generic',
      'platformio-debug.asm',
      'asm-collection',
    ],
    knownExtensions: ['asm'],
  },
  astro: { ids: 'astro', knownExtensions: ['astro'] },
  ats: { ids: ['ats'], knownExtensions: ['ats'] },
  autohotkey: { ids: ['ahk', 'ahk2'], knownExtensions: ['ahk'] },
  autoit: { ids: 'autoit', knownExtensions: ['au3'] },
  automake: { ids: 'automake', knownExtensions: ['am'] },
  avro: { ids: 'avro', knownExtensions: ['avcs'] },
  azcli: { ids: 'azcli', knownExtensions: ['azcli'] },
  azurepipelines: {
    ids: 'azure-pipelines',
    knownExtensions: ['azure-pipelines.yml'],
  },
  ballerina: { ids: 'ballerina', knownExtensions: ['bal'] },
  bat: { ids: 'bat', knownExtensions: ['bat'] },
  bats: { ids: 'bats', knownExtensions: ['bats'] },
  bazel: { ids: ['bazel', 'bazelrc'], knownExtensions: ['bzl'] },
  befunge: { ids: ['befunge', 'befunge98'], knownExtensions: ['bf'] },
  bicep: { ids: 'bicep', knownExtensions: ['bicep'] },
  bibtex: { ids: 'bibtex', knownExtensions: ['bib'] },
  biml: { ids: 'biml', knownExtensions: ['biml'] },
  binary: { ids: 'code-text-binary', knownExtensions: ['bin'] },
  biomesyntaxtree: { ids: 'biome_syntax_tree', knownExtensions: ['rast'] },
  blade: { ids: ['blade', 'laravel-blade'], knownExtensions: ['blade.php'] },
  blitzbasic: { ids: ['blitzbasic'], knownExtensions: ['blitzbasic'] },
  bolt: { ids: 'bolt', knownExtensions: ['bolt'] },
  bosque: { ids: 'bosque', knownExtensions: ['bsq'] },
  browserslist: {
    ids: 'browserslist',
    knownFilenames: ['browserslist', '.browserslistrc'],
  },
  bruno: { ids: 'bruno', knownExtensions: ['bru'] },
  buf: { ids: ['buf', 'buf-gen'], knownExtensions: ['buf.yaml'] },
  bunlockb: { ids: 'bun.lockb', knownExtensions: ['lockb'] },
  c: { ids: 'c', knownExtensions: ['c'] },
  c3: { ids: 'c3', knownExtensions: ['c3'] },
  c_al: { ids: 'c-al', knownExtensions: ['cal'] },
  cabal: { ids: 'cabal', knownExtensions: ['cabal'] },
  caddyfile: { ids: 'caddyfile', knownFilenames: ['Caddyfile'] },
  capnproto: { ids: ['capnp', 'capnproto'], knownExtensions: ['capnp'] },
  casc: { ids: 'casc', knownExtensions: ['casc'] },
  cddl: { ids: 'cddl', knownExtensions: ['cddl'] },
  ceylon: { ids: 'ceylon', knownExtensions: ['ceylon'] },
  cfc: { ids: 'cfc', knownExtensions: ['cfc'] },
  cfm: { ids: ['cfmhtml'], knownExtensions: ['cfm'] },
  circom: { ids: 'circom', knownExtensions: ['circom'] },
  clojure: { ids: 'clojure', knownExtensions: ['clojure'] },
  clojurescript: { ids: 'clojurescript', knownExtensions: ['clojurescript'] },
  cloudfoundrymanifest: { ids: 'manifest-yaml', knownExtensions: ['yml'] },
  cmake: {
    ids: 'cmake',
    knownExtensions: ['cmake'],
    knownFilenames: ['CMakeLists.txt'],
  },
  cmakecache: { ids: 'cmake-cache', knownFilenames: ['CMakeCache.txt'] },
  cobol: { ids: 'cobol', knownExtensions: ['cbl'] },
  codeql: { ids: 'ql', knownExtensions: ['ql'] },
  coffeescript: { ids: 'coffeescript', knownExtensions: ['coffee'] },
  coldfusion: { ids: ['cfml', 'lang-cfml'], knownExtensions: ['cfml'] },
  confluence: { ids: ['confluence'], knownExtensions: ['confluence'] },
  cookbook: { ids: 'cookbook', knownExtensions: ['ckbk'] },
  copilot: {
    ids: ['instructions', 'prompt'],
    knownExtensions: ['instructions.md'],
  },
  cpp: { ids: 'cpp', knownExtensions: ['cpp'] },
  crystal: { ids: 'crystal', knownExtensions: ['cr'] },
  csharp: { ids: 'csharp', knownExtensions: ['cs'] },
  css: {
    ids: 'css',
    knownExtensions: [
      'css',
      'wxss',
      'acss',
      'mcss',
      'pcss',
      'postcss',
      'nss',
      'ccss',
      'less',
      'scss',
      'sass',
    ],
  },
  csv: {
    ids: [
      'csv',
      'csv (pipe)',
      'csv (semicolon)',
      'csv (whitespace)',
      'dynamic csv',
      'tsv',
    ],
    knownExtensions: ['csv'],
  },
  cucumber: { ids: ['cucumber', 'feature'], knownExtensions: ['feature'] },
  cuda: { ids: ['cuda', 'cuda-cpp'], knownExtensions: ['cu'] },
  cypher: { ids: 'cypher', knownExtensions: ['cypher'] },
  cython: { ids: 'cython', knownExtensions: ['pyx'] },
  dal: { ids: 'dal', knownExtensions: ['dal'] },
  dart: { ids: 'dart', knownExtensions: ['dart'] },
  debian: {
    ids: [
      'debian-changelog',
      'debian-control',
      'debian-copyright',
      'debian-upstream-metadata',
    ],
  },
  dhall: { ids: 'dhall', knownExtensions: ['dhall'] },
  django: { ids: ['django-html', 'django-txt'], knownExtensions: ['html'] },
  diff: { ids: 'diff', knownExtensions: ['diff'] },
  dlang: { ids: ['d', 'dscript', 'dml', 'diet'], knownExtensions: ['d'] },
  dockerbake: { ids: 'dockerbake', knownExtensions: ['hcl'] },
  dockercompose: {
    ids: 'dockercompose',
    knownFilenames: [
      'docker-compose.yml',
      'docker-compose.yaml',
      'compose.yaml',
      'compose.yml',
    ],
  },
  dockerfile: {
    ids: 'dockerfile',
    knownFilenames: [
      'Dockerfile',
      'Dockerfile.dev',
      'Dockerfile.prod',
      'Dockerfile.test',
    ],
  },
  doctex: { ids: 'doctex', knownExtensions: ['dtx'] },
  dotenv: { ids: ['dotenv', 'env'], knownExtensions: ['env'] },
  dotjs: { ids: 'dotjs', knownExtensions: ['dot'] },
  doxygen: { ids: 'doxygen', knownExtensions: ['dox'] },
  drawio: { ids: 'drawio', knownExtensions: ['drawio'] },
  drools: { ids: 'drools', knownExtensions: ['drl'] },
  dtd: { ids: 'dtd', knownExtensions: ['dtd'] },
  dustjs: { ids: 'dustjs', knownExtensions: ['dust'] },
  dylanlang: { ids: ['dylan', 'dylan-lid'], knownExtensions: ['dylan'] },
  earthfile: { ids: 'earthfile', knownExtensions: ['earthfile'] },
  edge: { ids: 'edge', knownExtensions: ['edge'] },
  editorconfig: { ids: 'editorconfig', knownFilenames: ['.editorconfig'] },
  eex: { ids: ['eex', 'html-eex'], knownExtensions: ['eex'] },
  elastic: { ids: 'es', knownExtensions: ['es'] },
  elixir: { ids: 'elixir', knownExtensions: ['ex'] },
  elm: { ids: 'elm', knownExtensions: ['elm'] },
  erb: { ids: ['erb', 'html.erb'], knownExtensions: ['erb'] },
  erlang: { ids: 'erlang', knownExtensions: ['erl'] },
  esphome: { ids: 'esphome', knownExtensions: ['yaml'] },
  excel: { ids: 'excel', knownExtensions: ['xlsx'] },
  falcon: { ids: 'falcon', knownExtensions: ['falcon'] },
  fauna: { ids: 'fql', knownExtensions: ['fql'] },
  fortran: {
    ids: [
      'fortran',
      'fortran-modern',
      'FortranFreeForm',
      'FortranFixedForm',
      'fortran_fixed-form',
    ],
    knownExtensions: ['f'],
  },
  freemarker: { ids: 'ftl', knownExtensions: ['ftl'] },
  fsharp: { ids: 'fsharp', knownExtensions: ['fs'] },
  fthtml: { ids: 'fthtml', knownExtensions: ['fthtml'] },
  galen: { ids: 'galen', knownExtensions: ['gspec'] },
  gamemaker: { ids: 'gml-gms', knownExtensions: ['gml'] },
  gamemaker2: { ids: 'gml-gms2', knownExtensions: ['gml'] },
  gamemaker81: { ids: 'gml-gm81', knownExtensions: ['gml'] },
  gcode: { ids: 'gcode', knownExtensions: ['gcode'] },
  genstat: { ids: 'genstat', knownExtensions: ['gen'] },
  git: {
    ids: ['git-commit', 'git-rebase', 'ignore'],
    knownExtensions: ['git'],
  },
  gleam: { ids: 'gleam', knownExtensions: ['gleam'] },
  glimmer: { ids: ['glimmer-js', 'glimmer-ts'], knownExtensions: ['gjs'] },
  glsl: { ids: 'glsl', knownExtensions: ['glsl'] },
  glyphs: { ids: 'glyphs', knownExtensions: ['glyphs'] },
  gnuplot: { ids: 'gnuplot', knownExtensions: ['gp'] },
  go: { ids: 'go', knownExtensions: ['go'] },
  gomod: { ids: 'go.mod', knownExtensions: ['mod'] },
  gowork: { ids: 'go.work', knownExtensions: ['work'] },
  goctl: { ids: 'goctl', knownExtensions: ['api'] },
  gdscript: { ids: 'gdscript', knownExtensions: ['gd'] },
  gradle: { ids: 'gradle-kotlin-dsl', knownExtensions: ['gradle.kts'] },
  grain: { ids: 'grain', knownExtensions: ['gr'] },
  graphql: { ids: 'graphql', knownExtensions: ['gql'] },
  graphviz: { ids: 'dot', knownExtensions: ['gv'] },
  grit: { ids: 'grit', knownExtensions: ['grit'] },
  groovy: { ids: 'groovy', knownExtensions: ['groovy'] },
  haml: { ids: 'haml', knownExtensions: ['haml'] },
  handlebars: { ids: 'handlebars', knownExtensions: ['hbs'] },
  harbour: { ids: 'harbour', knownExtensions: ['prg'] },
  haskell: { ids: 'haskell', knownExtensions: ['hs'] },
  haxe: { ids: ['haxe', 'hxml', 'Haxe AST dump'], knownExtensions: ['haxe'] },
  hcl: { ids: ['hcl'], knownExtensions: ['hcl'] },
  helm: { ids: 'helm', knownExtensions: ['helm.tpl'] },
  hjson: { ids: 'hjson', knownExtensions: ['hjson'] },
  hlsl: { ids: 'hlsl', knownExtensions: ['hlsl'] },
  homeassistant: { ids: 'home-assistant', knownExtensions: ['yaml'] },
  hosts: { ids: 'hosts', knownExtensions: ['hosts'] },
  html: { ids: 'html', knownExtensions: ['html'] },
  http: { ids: 'http', knownExtensions: ['http'] },
  hunspell: { ids: ['hunspell.aff', 'hunspell.dic'], knownExtensions: ['aff'] },
  hy: { ids: 'hy', knownExtensions: ['hy'] },
  hypr: { ids: 'hypr', knownExtensions: ['hypr'] },
  icl: { ids: 'icl', knownExtensions: ['icl'] },
  imba: { ids: 'imba', knownExtensions: ['imba'] },
  informix: { ids: '4GL', knownExtensions: ['4gl'] },
  ini: { ids: 'ini', knownExtensions: ['ini'] },
  ink: { ids: 'ink', knownExtensions: ['ink'] },
  innosetup: { ids: 'innosetup', knownExtensions: ['iss'] },
  io: { ids: 'io', knownExtensions: ['io'] },
  janet: { ids: 'janet', knownExtensions: ['janet'] },
  java: { ids: 'java', knownExtensions: ['java'] },
  javascript: {
    ids: 'javascript',
    knownExtensions: [
      'js',
      'mjs',
      'cjs',
      'es',
      'es6',
      'jake',
      'jsm',
      'jsx',
      'njs',
      'pac',
      'sjs',
      'ssjs',
      'xsjs',
      'xsjslib',
    ],
  },
  javascriptreact: { ids: 'javascriptreact', knownExtensions: ['jsx'] },
  jekyll: { ids: 'jekyll', knownExtensions: ['jekyll'] },
  jenkins: {
    ids: ['jenkins', 'declarative', 'jenkinsfile'],
    knownExtensions: ['jenkins'],
  },
  jestsnapshot: { ids: 'jest-snapshot', knownExtensions: ['Jest-snap'] },
  jinja: {
    ids: [
      'jinja',
      'jinja-java',
      'jinja-html',
      'jinja-xml',
      'jinja-css',
      'jinja-json',
      'jinja-md',
      'jinja-py',
      'jinja-rb',
      'jinja-js',
      'jinja-yaml',
      'jinja-toml',
      'jinja-latex',
      'jinja-lua',
      'jinja-properties',
      'jinja-shell',
      'jinja-dockerfile',
      'jinja-sql',
      'jinja-terraform',
      'jinja-nginx',
      'jinja-groovy',
      'jinja-systemd',
      'jinja-cpp',
    ],
    knownExtensions: ['jinja'],
  },
  json: { ids: 'json', knownExtensions: ['json'] },
  jsonc: { ids: 'jsonc', knownExtensions: ['jsonc'] },
  jsonl: { ids: 'jsonl', knownExtensions: ['jsonl'] },
  jsonnet: { ids: 'jsonnet', knownExtensions: ['jsonnet'] },
  json5: { ids: 'json5', knownExtensions: ['json5'] },
  julia: { ids: ['julia', 'juliamarkdown'], knownExtensions: ['jl'] },
  just: { ids: 'just', knownFilenames: ['justfile', 'Justfile'] },
  iodine: { ids: 'iodine', knownExtensions: ['id'] },
  k: { ids: 'k', knownExtensions: ['k'] },
  kivy: { ids: 'kivy', knownExtensions: ['kv'] },
  kos: { ids: 'kos', knownExtensions: ['ks'] },
  kotlin: { ids: ['kotlin', 'kotlinscript'], knownExtensions: ['kt'] },
  kusto: { ids: 'kusto', knownExtensions: ['.kusto'] },
  latex: { ids: 'latex', knownExtensions: ['tex'] },
  lark: { ids: 'lark', knownExtensions: ['lark'] },
  latino: { ids: 'latino', knownExtensions: ['lat'] },
  lean: { ids: ['lean4', 'lean4markdown'], knownExtensions: ['lean'] },
  less: { ids: 'less', knownExtensions: ['less'] },
  lex: { ids: 'lex', knownExtensions: ['flex'] },
  lilypond: { ids: 'lilypond', knownExtensions: ['ly'] },
  lisp: { ids: ['lisp', 'autolisp', 'autolispdcl'], knownExtensions: ['lisp'] },
  literatehaskell: { ids: ['literate haskell'], knownExtensions: ['lhs'] },
  log: { ids: 'log', knownExtensions: ['log'] },
  lolcode: { ids: 'lolcode', knownExtensions: ['lol'] },
  lsl: { ids: 'lsl', knownExtensions: ['lsl'] },
  lua: { ids: 'lua', knownExtensions: ['lua'] },
  m4: { ids: 'm4', knownExtensions: ['m4'] },
  makefile: { ids: ['makefile', 'makefile2'], knownExtensions: ['mk'] },
  markdown: {
    ids: 'markdown',
    knownExtensions: ['md', 'markdown', 'mdown', 'mkd'],
  },
  marko: { ids: 'marko', knownExtensions: ['marko'] },
  matlab: { ids: 'matlab', knownExtensions: ['mat'] },
  maxscript: { ids: 'maxscript', knownExtensions: ['ms'] },
  mdx: { ids: 'mdx', knownExtensions: ['mdx'] },
  mediawiki: { ids: 'mediawiki', knownExtensions: ['mediawiki'] },
  mel: { ids: 'mel', knownExtensions: ['mel'] },
  mermaid: { ids: 'mermaid', knownExtensions: ['mmd'] },
  meson: { ids: 'meson', knownFilenames: ['meson.build'] },
  metal: { ids: 'metal', knownExtensions: ['metal'] },
  minecraft: {
    ids: [
      'bc-mcfunction',
      'bc-minecraft-language',
      'bc-minecraft-molang',
      'bc-minecraft-project',
      'mcdoc',
      'mcfunction',
      'mcmeta',
      'mcscript',
      'minecraft-lang',
      'options-txt',
      'snbt',
    ],
    knownExtensions: ['mcfunction'],
  },
  mjml: { ids: 'mjml', knownExtensions: ['mjml'] },
  mlang: { ids: ['powerquery'], knownExtensions: ['pq'] },
  mojo: { ids: 'mojo', knownExtensions: ['mojo'] },
  mojolicious: { ids: 'mojolicious', knownExtensions: ['ep'] },
  mongo: { ids: 'mongo', knownExtensions: ['mongo'] },
  mson: { ids: 'mson', knownExtensions: ['mson'] },
  mv: { ids: 'mv', knownExtensions: ['mv'] },
  mvt: { ids: 'mvt', knownExtensions: ['mvt'] },
  mvtcss: { ids: 'mvtcss', knownExtensions: ['mvt'] },
  mvtjs: { ids: 'mvtjs', knownExtensions: ['mvt'] },
  nearley: { ids: 'nearley', knownExtensions: ['ne'] },
  nextflow: { ids: 'nextflow', knownExtensions: ['nf'] },
  nginx: { ids: ['nginx'], knownExtensions: ['nginx'] },
  nim: { ids: 'nim', knownExtensions: ['nim'] },
  nimble: { ids: 'nimble', knownExtensions: ['nimble'] },
  nix: { ids: 'nix', knownExtensions: ['nix'] },
  nsis: { ids: ['nsis', 'nfl', 'nsl', 'bridlensis'], knownExtensions: ['nsi'] },
  nunjucks: { ids: 'nunjucks', knownExtensions: ['nunjucks'] },
  objectivec: { ids: 'objective-c', knownExtensions: ['m'] },
  objectivecpp: { ids: 'objective-cpp', knownExtensions: ['mm'] },
  ocaml: { ids: ['ocaml', 'ocamllex', 'menhir'], knownExtensions: ['ml'] },
  ogone: { ids: 'ogone', knownExtensions: ['o3'] },
  openEdge: { ids: 'abl', knownExtensions: ['w'] },
  openHAB: { ids: 'openhab', knownExtensions: ['things'] },
  org: { ids: 'org', knownExtensions: ['org'] },
  pascal: { ids: ['pascal', 'objectpascal'], knownExtensions: ['pas'] },
  pddl: { ids: 'pddl', knownExtensions: ['pddl'] },
  pddlplan: { ids: 'plan', knownExtensions: ['plan'] },
  pddlhappenings: { ids: 'happenings', knownExtensions: ['happenings'] },
  perl: { ids: 'perl', knownExtensions: ['pl'] },
  perl6: { ids: 'perl6', knownExtensions: ['pl6'] },
  pgsql: { ids: 'pgsql', knownExtensions: ['pgsql'] },
  php: {
    ids: 'php',
    knownExtensions: [
      'php',
      'php4',
      'php5',
      'php7',
      'phtml',
      'phps',
      'phpt',
      'phar',
      'aw',
      'ctp',
      'inc',
      'php3',
      'php8',
      'module',
      'theme',
      'tpl',
    ],
    knownFilenames: ['.php-version', 'artisan'],
  },
  pine: { ids: ['pine', 'pinescript'], knownExtensions: ['pine'] },
  pip: {
    ids: 'pip-requirements',
    knownFilenames: [
      'requirements.txt',
      'requirements-dev.txt',
      'requirements-test.txt',
      'requirements-prod.txt',
    ],
  },
  plaintext: { ids: ['plaintext', 'vim-help'], knownExtensions: ['txt'] },
  platformio: {
    ids: [
      'platformio-debug.disassembly',
      'platformio-debug.memoryview',
      'platformio-debug.asm',
    ],
    knownExtensions: ['dbgasm'],
  },
  plsql: {
    ids: ['plsql', 'oracle', 'oraclesql', 'oracle-sql'],
    knownExtensions: ['ddl'],
  },
  po: { ids: 'po', knownExtensions: ['po'] },
  polymer: { ids: 'polymer', knownExtensions: ['polymer'] },
  pony: { ids: 'pony', knownExtensions: ['pony'] },
  postcss: { ids: 'postcss', knownExtensions: ['pcss'] },
  powershell: { ids: 'powershell', knownExtensions: ['ps1'] },
  prisma: { ids: 'prisma', knownExtensions: ['prisma'] },
  processinglang: { ids: 'pde', knownExtensions: ['pde'] },
  prolog: { ids: 'prolog', knownExtensions: ['pro'] },
  prometheus: { ids: 'prometheus', knownExtensions: ['rules'] },
  properties: {
    ids: ['java-properties', 'properties'],
    knownExtensions: ['properties'],
  },
  protobuf: {
    ids: ['proto3', 'proto', 'prototext'],
    knownExtensions: ['proto'],
  },
  pug: { ids: 'jade', knownExtensions: ['pug'] },
  puppet: { ids: 'puppet', knownExtensions: ['pp'] },
  purescript: { ids: 'purescript', knownExtensions: ['purs'] },
  pyret: { ids: 'pyret', knownExtensions: ['arr'] },
  pyscript: { ids: 'pyscript', knownExtensions: ['pyscript'] },
  python: {
    ids: 'python',
    knownExtensions: [
      'py',
      'pyi',
      'pyw',
      'pyc',
      'pyd',
      'pyo',
      'pyx',
      'pxd',
      'pxi',
      'rpy',
      'cpy',
      'ipy',
    ],
    knownFilenames: [
      'setup.py',
      'setup.cfg',
      '.python-version',
      'Pipfile',
      'Pipfile.lock',
    ],
  },
  pythowo: { ids: 'pythowo', knownExtensions: ['pyowo'] },
  qlik: { ids: 'qlik', knownExtensions: ['qvs'] },
  qml: { ids: 'qml', knownExtensions: ['qml'] },
  qsharp: { ids: 'qsharp', knownExtensions: ['qs'] },
  r: { ids: 'r', knownExtensions: ['r'] },
  racket: { ids: 'racket', knownExtensions: ['rkt'] },
  raku: { ids: 'raku', knownExtensions: ['raku'] },
  razor: { ids: ['razor', 'aspnetcorerazor'], knownExtensions: ['cshtml'] },
  raml: { ids: 'raml', knownExtensions: ['raml'] },
  rast: { ids: 'ra_syntax_tree', knownExtensions: ['rast'] },
  reason: { ids: 'reason', knownExtensions: ['re'] },
  red: { ids: 'red', knownExtensions: ['red'] },
  rescript: { ids: 'rescript', knownExtensions: ['res'] },
  restructuredtext: { ids: 'restructuredtext', knownExtensions: ['rst'] },
  rexx: { ids: 'rexx', knownExtensions: ['rex'] },
  riot: { ids: 'riot', knownExtensions: ['tag'] },
  ripple: { ids: 'ripple', knownExtensions: ['ripple'] },
  rmd: { ids: 'rmd', knownExtensions: ['rmd'] },
  rnc: { ids: 'rnc', knownExtensions: ['rnc'] },
  robot: { ids: 'robot', knownExtensions: ['robot'] },
  ruby: {
    ids: 'ruby',
    knownExtensions: [
      'rb',
      'rbw',
      'rake',
      'gemspec',
      'ru',
      'erb',
      'rjs',
      'rxml',
      'rsel',
      'builder',
      'jbuilder',
      'rabl',
      'prawn',
      'thor',
    ],
    knownFilenames: ['config.ru'],
  },
  rust: {
    ids: 'rust',
    knownExtensions: ['rs'],
  },
  s_lang: { ids: 's-lang', knownExtensions: ['sl'] },
  san: { ids: 'san', knownExtensions: ['san'] },
  sas: { ids: 'SAS', knownExtensions: ['sas'] },
  sass: { ids: ['sass', 'sass.hover'], knownExtensions: ['sass'] },
  sbt: { ids: 'sbt', knownExtensions: ['sbt'] },
  scad: { ids: 'scad', knownExtensions: ['scad'] },
  scala: { ids: 'scala', knownExtensions: ['scala'] },
  scilab: { ids: 'scilab', knownExtensions: ['sce'] },
  scss: { ids: 'scss', knownExtensions: ['scss'] },
  sdlang: { ids: 'sdl', knownExtensions: ['sdl'] },
  searchresult: { ids: 'search-result', knownExtensions: ['code-search'] },
  shaderlab: { ids: 'shaderlab', knownExtensions: ['shader'] },
  shellscript: {
    ids: 'shellscript',
    knownExtensions: ['sh', 'bash', 'zsh', 'ksh', 'fish'],
    knownFilenames: [
      '.bashrc',
      '.zshrc',
      '.profile',
      '.bash_profile',
      '.bash_aliases',
      '.zprofile',
    ],
  },
  slang: { ids: 'slang', knownExtensions: ['slang'] },
  slice: { ids: ['slice'], knownExtensions: ['ice'] },
  slim: { ids: ['slim'], knownExtensions: ['slim'] },
  slint: { ids: ['slint'], knownExtensions: ['slint'] },
  sln: { ids: 'sln', knownExtensions: ['sln'] },
  silverstripe: { ids: 'silverstripe', knownExtensions: ['ss'] },
  sino: { ids: 'sino', knownExtensions: ['sn'] },
  skipper: { ids: ['eskip'], knownExtensions: ['eskip'] },
  smarty: { ids: ['smarty'], knownExtensions: ['tpl'] },
  snakemake: { ids: ['snakemake'], knownExtensions: ['smk'] },
  snippets: { ids: 'snippets', knownExtensions: ['code-snippets'] },
  snort: { ids: ['snort'], knownExtensions: ['snort'] },
  solidity: { ids: ['solidity'], knownExtensions: ['sol'] },
  sparql: { ids: 'sparql', knownExtensions: ['rq'] },
  springbootproperties: {
    ids: 'spring-boot-properties',
    knownExtensions: ['properties'],
  },
  springbootpropertiesyaml: {
    ids: 'spring-boot-properties-yaml',
    knownExtensions: ['yml'],
  },
  sqf: { ids: 'sqf', knownExtensions: ['sqf'] },
  sql: { ids: 'sql', knownExtensions: ['sql'] },
  squirrel: { ids: 'squirrel', knownExtensions: ['nut'] },
  stan: { ids: 'stan', knownExtensions: ['stan'] },
  starlark: { ids: 'starlark', knownExtensions: ['bazel'] },
  stata: { ids: 'stata', knownExtensions: ['do'] },
  stencil: { ids: 'stencil', knownExtensions: ['stencil'] },
  stencilhtml: { ids: 'stencil-html', knownExtensions: ['html.stencil'] },
  stylable: { ids: 'stylable', knownExtensions: ['st.css'] },
  styled: { ids: 'source.css.styled', knownExtensions: ['styled'] },
  stylus: { ids: 'stylus', knownExtensions: ['styl'] },
  svelte: { ids: 'svelte', knownExtensions: ['svelte'] },
  svg: { ids: 'svg', knownExtensions: ['svg'] },
  swagger: { ids: ['Swagger', 'swagger'], knownExtensions: ['swagger'] },
  swift: { ids: 'swift', knownExtensions: ['swift'] },
  swig: { ids: 'swig', knownExtensions: ['swig'] },
  systemd: {
    ids: ['systemd-conf', 'systemd-unit-file'],
    knownExtensions: ['link'],
  },
  systemverilog: { ids: 'systemverilog', knownExtensions: ['sv'] },
  t4: { ids: 't4', knownExtensions: ['tt'] },
  tailwindcss: { ids: 'tailwindcss', knownExtensions: ['css'] },
  teal: { ids: 'teal', knownExtensions: ['teal'] },
  templ: { ids: 'templ', knownExtensions: ['templ'] },
  templatetoolkit: { ids: 'tt', knownExtensions: ['tt3'] },
  tera: { ids: 'tera', knownExtensions: ['tera'] },
  terraform: { ids: 'terraform', knownExtensions: ['tf'] },
  tex: { ids: 'tex', knownExtensions: ['sty'] },
  textile: { ids: 'textile', knownExtensions: ['textile'] },
  textmatejson: {
    ids: 'json-tmlanguage',
    knownExtensions: ['JSON-tmLanguage'],
  },
  textmateyaml: {
    ids: 'yaml-tmlanguage',
    knownExtensions: ['YAML-tmLanguage'],
  },
  tiltfile: { ids: 'tiltfile', knownFilenames: ['Tiltfile'] },
  toit: { ids: 'toit', knownExtensions: ['toit'] },
  toml: { ids: 'toml', knownExtensions: ['toml'] },
  ttcn: { ids: 'ttcn', knownExtensions: ['ttcn3'] },
  tuc: { ids: 'tuc', knownExtensions: ['tuc'] },
  twig: { ids: 'twig', knownExtensions: ['twig'] },
  typescript: {
    ids: 'typescript',
    knownExtensions: ['ts', 'mts', 'cts'],
  },
  typescriptreact: {
    ids: 'typescriptreact',
    knownExtensions: ['tsx'],
  },
  typo3: { ids: 'typoscript', knownExtensions: ['typoscript'] },
  uiua: { ids: 'uiua', knownExtensions: ['ua'] },
  unison: { ids: 'unison', knownExtensions: ['u'] },
  vb: { ids: 'vb', knownExtensions: ['vb'] },
  vba: { ids: 'vba', knownExtensions: ['cls'] },
  vbscript: { ids: 'vbscript', knownExtensions: ['wsf'] },
  velocity: { ids: 'velocity', knownExtensions: ['vm'] },
  vento: { ids: 'vento', knownExtensions: ['vto'] },
  verilog: { ids: 'verilog', knownExtensions: ['v'] },
  vhdl: { ids: 'vhdl', knownExtensions: ['vhdl'] },
  viml: { ids: ['viml', 'vim-snippet'], knownExtensions: ['vim'] },
  vitestsnapshot: { ids: 'vitest-snapshot', knownExtensions: ['Vitest-snap'] },
  vlang: { ids: 'v', knownExtensions: ['v'] },
  volt: { ids: 'volt', knownExtensions: ['volt'] },
  vue: {
    ids: 'vue',
    knownExtensions: ['vue', 'vue2', 'vue3', 'vues', 'vuex', 'vuerc'],
    knownFilenames: ['.vue-cli-rc'],
  },
  vyper: { ids: 'vyper', knownExtensions: ['vy'] },
  wai: { ids: ['wai'], knownExtensions: ['wai'] },
  wasm: {
    ids: ['wasm', 'wat'],
    knownExtensions: ['wasm', 'wat', 'wast', 'wsm', 'wast.js', 'wit', 'witx'],
  },
  wenyan: { ids: 'wenyan', knownExtensions: ['wy'] },
  wgsl: { ids: 'wgsl', knownExtensions: ['wgsl'] },
  wikitext: { ids: 'wikitext', knownExtensions: ['wt'] },
  wolfram: { ids: 'wolfram', knownExtensions: ['wl'] },
  wurst: { ids: ['wurstlang', 'wurst'], knownExtensions: ['wurst'] },
  wxml: { ids: 'wxml', knownExtensions: ['wxml'] },
  xcompose: { ids: 'xcompose', knownExtensions: ['xcompose'] },
  xmake: { ids: 'xmake', knownExtensions: ['xmake.lua'] },
  xml: { ids: 'xml', knownExtensions: ['xml'] },
  xquery: { ids: 'xquery', knownExtensions: ['xquery'] },
  xsl: { ids: ['xsl', 'xslt'], knownExtensions: ['xsl'] },
  yacc: { ids: 'yacc', knownExtensions: ['bison'] },
  yaml: {
    ids: 'yaml',
    knownExtensions: ['yaml', 'yml'],
  },
  yang: { ids: 'yang', knownExtensions: ['yang'] },
  yarnlock: { ids: 'yarnlock', knownFilenames: ['yarn.lock'] },
  zig: { ids: 'zig', knownExtensions: ['zig'] },
  zip: { ids: 'zip', knownExtensions: ['zip'] },
} satisfies Record<string, ILanguage>;
