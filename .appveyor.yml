version: '#{build}'
image: Visual Studio 2017
clone_depth: 5
build: off
environment:
  # Define versions of Node.js
  matrix:
    - node_js: ''    # latest node
    - node_js: 8.9.3 # vscode >= 1.26.0
    - node_js: 7.9.0 # vscode >= 1.16.0 < 1.26.0
matrix:
  fast_finish: true
  allow_failures:
    - node_js: ''
# Define platforms
platform:
  - x64
init:
  # Install the platform version of Node.js
  - ps: Install-Product node $env:node_js $env:platform
  # Output useful info for debugging
  - node --version
  - npm --version
  - yarn --version
  - ps: $PSVersionTable.PSVersion -f ''
install:
  # Install the latest version of Yarn
  - ps: curl -o $env:temp\install.ps1 https://raw.githubusercontent.com/JimiC/ps-yarn-install/master/install.ps1 | powershell $env:temp\install.ps1
  # Install modules
  - yarn install
cache:
  # - node_modules
  - '%LOCALAPPDATA%\Yarn'
before_test:
  # install coverage reporters
  - npm i codeclimate-test-reporter codecov --no-save
  # run postinstall again to ensure that 'vscode.d.ts' is installed
  - npm run postinstall
test_script:
  # run test script
  - npm test
after_test:
  # send coverage report
  - ps: If ($env:CODECLIMATE_REPO_TOKEN -ne $null) { gc .\coverage\lcov.info | & .\node_modules\.bin\codeclimate-test-reporter }
  - ps: If ($env:CODECOV_TOKEN -ne $null) { .\node_modules\.bin\codecov --disable=gcov }
